import React, { useState, useEffect } from "react";
import "./index.css";

function App() {
  const [backendStatus, setBackendStatus] = useState("checking...");

  useEffect(() => {
    fetch("https://squadup-backend-03vr.onrender.com/api/health")
      .then(response => response.json())
      .then(data => {
        setBackendStatus("‚úÖ Online");
      })
      .catch(error => {
        setBackendStatus("‚ùå Offline");
      });
  }, []);

  return React.createElement(
    "div",
    { 
      className: "App",
      style: {
        background: "linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%)",
        color: "white",
        minHeight: "100vh",
        fontFamily: "'Segoe UI', Tahoma, sans-serif",
        position: "relative",
        overflow: "hidden"
      }
    },
    
    // –§–æ–Ω–æ–≤—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã
    React.createElement("div", {
      style: {
        position: "absolute",
        top: 0,
        left: 0,
        right: 0,
        bottom: 0,
        background: `
          radial-gradient(circle at 20% 80%, rgba(78, 84, 200, 0.15) 0%, transparent 50%),
          radial-gradient(circle at 80% 20%, rgba(138, 43, 226, 0.15) 0%, transparent 50%)
        `,
        zIndex: 1
      }
    }),
    
    // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    React.createElement(
      "div",
      {
        style: {
          position: "relative",
          zIndex: 2,
          maxWidth: "1200px",
          margin: "0 auto",
          padding: "80px 20px",
          textAlign: "center"
        }
      },
      
      // –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º
      React.createElement(
        "h1",
        {
          style: {
            fontSize: "clamp(2.5rem, 6vw, 4.5rem)",
            fontWeight: "800",
            marginBottom: "20px",
            background: "linear-gradient(45deg, #4e54c8, #8a2be2, #00ff88, #ff6b6b)",
            WebkitBackgroundClip: "text",
            WebkitTextFillColor: "transparent",
            backgroundSize: "400% 400%",
            animation: "gradientShift 8s ease infinite"
          }
        },
        "üöÄ SQUADUP PREMIUM"
      ),
      
      // –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫
      React.createElement(
        "p",
        {
          style: {
            fontSize: "clamp(1.2rem, 3vw, 1.5rem)",
            color: "#b0b0d0",
            marginBottom: "10px",
            lineHeight: "1.6"
          }
        },
        "–ù–∞–π–¥–∏ —Å–≤–æ—é –∏–¥–µ–∞–ª—å–Ω—É—é –∏–≥—Ä–æ–≤—É—é –∫–æ–º–∞–Ω–¥—É"
      ),
      
      // –Ø–†–ö–ò–ô –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –≤–µ—Ä—Å–∏–∏
      React.createElement(
        "div",
        {
          style: {
            background: "linear-gradient(45deg, #00ff88, #4e54c8)",
            color: "white",
            padding: "15px 30px",
            borderRadius: "50px",
            display: "inline-block",
            margin: "30px 0 40px 0",
            fontWeight: "bold",
            fontSize: "1.2rem",
            boxShadow: "0 6px 20px rgba(0, 255, 136, 0.4)",
            animation: "pulse 2s infinite"
          }
        },
        "‚ú® –ü–†–ï–ú–ò–£–ú –î–ò–ó–ê–ô–ù v2.0 –ê–ö–¢–ò–í–ò–†–û–í–ê–ù!"
      ),
      
      // –°—Ç–∞—Ç—É—Å –±—ç–∫–µ–Ω–¥–∞
      React.createElement(
        "div",
        {
          style: {
            background: "rgba(255, 255, 255, 0.1)",
            padding: "15px 25px",
            borderRadius: "15px",
            display: "inline-block",
            marginBottom: "50px",
            backdropFilter: "blur(10px)",
            border: "1px solid rgba(255, 255, 255, 0.2)"
          }
        },
        "Backend Status: ",
        React.createElement(
          "strong",
          { 
            style: { 
              color: backendStatus.includes("‚úÖ") ? "#00ff88" : 
                     backendStatus.includes("checking") ? "#ffc107" : "#ff6b6b" 
            }
          },
          backendStatus
        )
      ),
      
      // –ö–Ω–æ–ø–∫–∏ CTA
      React.createElement(
        "div",
        {
          style: {
            display: "flex",
            gap: "20px",
            justifyContent: "center",
            flexWrap: "wrap",
            marginBottom: "80px"
          }
        },
        React.createElement(
          "button",
          {
            style: {
              background: "linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
              color: "white",
              border: "none",
              padding: "18px 35px",
              borderRadius: "50px",
              fontSize: "1.2rem",
              fontWeight: "bold",
              cursor: "pointer",
              transition: "all 0.3s ease",
              boxShadow: "0 6px 20px rgba(102, 126, 234, 0.4)"
            },
            onMouseEnter: (e) => {
              e.target.style.transform = "translateY(-3px)";
              e.target.style.boxShadow = "0 10px 30px rgba(102, 126, 234, 0.6)";
            },
            onMouseLeave: (e) => {
              e.target.style.transform = "translateY(0)";
              e.target.style.boxShadow = "0 6px 20px rgba(102, 126, 234, 0.4)";
            }
          },
          "üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ"
        ),
        React.createElement(
          "button",
          {
            style: {
              background: "transparent",
              color: "#4e54c8",
              border: "2px solid #4e54c8",
              padding: "16px 32px",
              borderRadius: "50px",
              fontSize: "1.2rem",
              fontWeight: "bold",
              cursor: "pointer",
              transition: "all 0.3s ease",
              backdropFilter: "blur(10px)"
            },
            onMouseEnter: (e) => {
              e.target.style.background = "#4e54c8";
              e.target.style.color = "white";
              e.target.style.transform = "translateY(-2px)";
            },
            onMouseLeave: (e) => {
              e.target.style.background = "transparent";
              e.target.style.color = "#4e54c8";
              e.target.style.transform = "translateY(0)";
            }
          },
          "üë• –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É"
        )
      ),
      
      // –°–µ—Ç–∫–∞ —Ñ—É–Ω–∫—Ü–∏–π
      React.createElement(
        "div",
        {
          style: {
            display: "grid",
            gridTemplateColumns: "repeat(auto-fit, minmax(300px, 1fr))",
            gap: "30px",
            maxWidth: "1100px",
            margin: "0 auto 80px auto"
          }
        },
        
        // –§—É–Ω–∫—Ü–∏—è 1
        React.createElement(
          "div",
          {
            style: {
              background: "rgba(30, 30, 60, 0.8)",
              padding: "40px 30px",
              borderRadius: "20px",
              border: "1px solid rgba(255, 255, 255, 0.1)",
              backdropFilter: "blur(15px)",
              transition: "all 0.4s ease",
              position: "relative",
              overflow: "hidden"
            },
            onMouseEnter: (e) => {
              e.target.style.transform = "translateY(-10px) scale(1.02)";
              e.target.style.boxShadow = "0 20px 40px rgba(0, 0, 0, 0.4)";
              e.target.style.borderColor = "rgba(78, 84, 200, 0.3)";
            },
            onMouseLeave: (e) => {
              e.target.style.transform = "translateY(0) scale(1)";
              e.target.style.boxShadow = "none";
              e.target.style.borderColor = "rgba(255, 255, 255, 0.1)";
            }
          },
          React.createElement("div", { 
            style: { 
              fontSize: "3rem", 
              marginBottom: "20px",
              animation: "float 3s ease-in-out infinite" 
            } 
          }, "üéØ"),
          React.createElement("h3", { 
            style: { 
              marginBottom: "15px", 
              color: "white",
              fontSize: "1.4rem"
            } 
          }, "–£–º–Ω—ã–π –ø–æ–¥–±–æ—Ä –∫–æ–º–∞–Ω–¥—ã"),
          React.createElement("p", { 
            style: { 
              color: "#b0b0d0", 
              lineHeight: "1.6",
              fontSize: "1rem"
            } 
          }, "AI –∞–ª–≥–æ—Ä–∏—Ç–º—ã –ø–æ–¥–±–∏—Ä–∞—é—Ç –∏–≥—Ä–æ–∫–æ–≤ —Å –∏–¥–µ–∞–ª—å–Ω—ã–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ–º –ø–æ —Å—Ç–∏–ª—é –∏–≥—Ä—ã, —Ä–µ–π—Ç–∏–Ω–≥—É –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é")
        ),
        
        // –§—É–Ω–∫—Ü–∏—è 2
        React.createElement(
          "div",
          {
            style: {
              background: "rgba(30, 30, 60, 0.8)",
              padding: "40px 30px",
              borderRadius: "20px",
              border: "1px solid rgba(255, 255, 255, 0.1)",
              backdropFilter: "blur(15px)",
              transition: "all 0.4s ease",
              position: "relative",
              overflow: "hidden"
            },
            onMouseEnter: (e) => {
              e.target.style.transform = "translateY(-10px) scale(1.02)";
              e.target.style.boxShadow = "0 20px 40px rgba(0, 0, 0, 0.4)";
              e.target.style.borderColor = "rgba(138, 43, 226, 0.3)";
            },
            onMouseLeave: (e) => {
              e.target.style.transform = "translateY(0) scale(1)";
              e.target.style.boxShadow = "none";
              e.target.style.borderColor = "rgba(255, 255, 255, 0.1)";
            }
          },
          React.createElement("div", { 
            style: { 
              fontSize: "3rem", 
              marginBottom: "20px",
              animation: "float 3s ease-in-out infinite",
              animationDelay: "0.5s"
            } 
          }, "üó∫Ô∏è"),
          React.createElement("h3", { 
            style: { 
              marginBottom: "15px", 
              color: "white",
              fontSize: "1.4rem"
            } 
          }, "–ì–µ–æ–ª–æ–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –ø–æ–∏—Å–∫"),
          React.createElement("p", { 
            style: { 
              color: "#b0b0d0", 
              lineHeight: "1.6",
              fontSize: "1rem"
            } 
          }, "–ù–∞—Ö–æ–¥–∏ —Ç–∏–º–º–µ–π—Ç–æ–≤ –≤ —Å–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–∏–Ω–≥–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–≥—Ä–∞—Ç—å –æ—Ñ–ª–∞–π–Ω")
        ),
        
        // –§—É–Ω–∫—Ü–∏—è 3
        React.createElement(
          "div",
          {
            style: {
              background: "rgba(30, 30, 60, 0.8)",
              padding: "40px 30px",
              borderRadius: "20px",
              border: "1px solid rgba(255, 255, 255, 0.1)",
              backdropFilter: "blur(15px)",
              transition: "all 0.4s ease",
              position: "relative",
              overflow: "hidden"
            },
            onMouseEnter: (e) => {
              e.target.style.transform = "translateY(-10px) scale(1.02)";
              e.target.style.boxShadow = "0 20px 40px rgba(0, 0, 0, 0.4)";
              e.target.style.borderColor = "rgba(0, 255, 136, 0.3)";
            },
            onMouseLeave: (e) => {
              e.target.style.transform = "translateY(0) scale(1)";
              e.target.style.boxShadow = "none";
              e.target.style.borderColor = "rgba(255, 255, 255, 0.1)";
            }
          },
          React.createElement("div", { 
            style: { 
              fontSize: "3rem", 
              marginBottom: "20px",
              animation: "float 3s ease-in-out infinite",
              animationDelay: "1s"
            } 
          }, "üéôÔ∏è"),
          React.createElement("h3", { 
            style: { 
              marginBottom: "15px", 
              color: "white",
              fontSize: "1.4rem"
            } 
          }, "–ì–æ–ª–æ—Å–æ–≤–æ–π —á–∞—Ç WebRTC"),
          React.createElement("p", { 
            style: { 
              color: "#b0b0d0", 
              lineHeight: "1.6",
              fontSize: "1rem"
            } 
          }, "–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π P2P –≥–æ–ª–æ—Å–æ–≤–æ–π —á–∞—Ç —Å –∫—Ä–∏—Å—Ç–∞–ª—å–Ω–æ —á–∏—Å—Ç—ã–º –∑–≤—É–∫–æ–º. –ë–µ–∑ –∑–∞–¥–µ—Ä–∂–µ–∫, –±–µ–∑ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤")
        )
      ),
      
      // –§—É—Ç–µ—Ä
      React.createElement(
        "div",
        {
          style: {
            marginTop: "60px",
            paddingTop: "40px",
            borderTop: "1px solid rgba(255, 255, 255, 0.1)",
            color: "#b0b0d0",
            fontSize: "14px"
          }
        },
        "SquadUp Premium v2.0 ‚Ä¢ ",
        React.createElement(
          "strong",
          { style: { color: "#4e54c8" } },
          "–°–¥–µ–ª–∞–Ω–æ —Å ‚ù§Ô∏è –¥–ª—è –≥–µ–π–º–µ—Ä–æ–≤"
        ),
        React.createElement("br"),
        React.createElement(
          "span",
          {
            style: {
              fontSize: "12px",
              opacity: "0.7",
              marginTop: "10px",
              display: "inline-block"
            }
          },
          "–û–±–Ω–æ–≤–ª–µ–Ω–æ: " + new Date().toLocaleString('ru-RU')
        )
      )
    )
  );
}

export default App;
