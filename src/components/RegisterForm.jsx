import React, { useState } from 'react';
import { authService } from '../services/api';

const RegisterForm = ({ onSuccess, onSwitchToLogin }) => {
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    nickname: ''
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
    setError('');
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.email || !formData.password || !formData.nickname) {
      setError('–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è');
      return;
    }

    if (formData.password.length < 6) {
      setError('–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤');
      return;
    }

    setLoading(true);
    setError('');

    try {
      console.log('üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏...');
      const result = await authService.register(formData);

      if (result.success) {
        console.log('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
        if (onSuccess) onSuccess(result.data);
      } else {
        setError(result.message || '–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      }
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', err);

      // –î–µ—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      if (err.code === 'NETWORK_ERROR' || err.message === 'Network Error') {
        setError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5000');
      } else if (err.response?.data?.message) {
        setError(err.response.data.message);
      } else if (err.response?.data?.errors) {
        setError(err.response.data.errors.join(', '));
      } else {
        setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.');
      }
    } finally {
      setLoading(false);
    }
  };

  return (
    <div style={{
      maxWidth: '400px',
      margin: '50px auto',
      padding: '30px',
      background: 'rgba(30, 30, 60, 0.7)',
          borderRadius: '15px',
          border: '1px solid rgba(255, 255, 255, 0.1)'
    }}>
    <h2 style={{ textAlign: 'center', marginBottom: '30px', color: 'white' }}>
    üéÆ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ SquadUp
    </h2>

    {error && (
      <div style={{
        background: 'rgba(255, 107, 107, 0.1)',
               border: '1px solid rgba(255, 107, 107, 0.3)',
               color: '#ff6b6b',
               padding: '15px',
               borderRadius: '8px',
               marginBottom: '20px',
               textAlign: 'center',
               fontSize: '14px'
      }}>
      ‚ö†Ô∏è {error}
      </div>
    )}

    <form onSubmit={handleSubmit}>
    <div style={{ marginBottom: '20px' }}>
    <label style={{ display: 'block', marginBottom: '8px', color: '#b0b0d0' }}>
    Email
    </label>
    <input
    type="email"
    name="email"
    value={formData.email}
    onChange={handleChange}
    required
    disabled={loading}
    style={{
      width: '100%',
      padding: '12px',
      background: 'rgba(255, 255, 255, 0.1)',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          borderRadius: '8px',
          color: 'white',
          fontSize: '16px',
          outline: 'none'
    }}
    placeholder="your@email.com"
    />
    </div>

    <div style={{ marginBottom: '20px' }}>
    <label style={{ display: 'block', marginBottom: '8px', color: '#b0b0d0' }}>
    –ü–∞—Ä–æ–ª—å
    </label>
    <input
    type="password"
    name="password"
    value={formData.password}
    onChange={handleChange}
    required
    minLength="6"
    disabled={loading}
    style={{
      width: '100%',
      padding: '12px',
      background: 'rgba(255, 255, 255, 0.1)',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          borderRadius: '8px',
          color: 'white',
          fontSize: '16px',
          outline: 'none'
    }}
    placeholder="–ù–µ –º–µ–Ω–µ–µ 6 —Å–∏–º–≤–æ–ª–æ–≤"
    />
    </div>

    <div style={{ marginBottom: '30px' }}>
    <label style={{ display: 'block', marginBottom: '8px', color: '#b0b0d0' }}>
    –ò–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º
    </label>
    <input
    type="text"
    name="nickname"
    value={formData.nickname}
    onChange={handleChange}
    required
    minLength="2"
    disabled={loading}
    style={{
      width: '100%',
      padding: '12px',
      background: 'rgba(255, 255, 255, 0.1)',
          border: '1px solid rgba(255, 255, 255, 0.2)',
          borderRadius: '8px',
          color: 'white',
          fontSize: '16px',
          outline: 'none'
    }}
    placeholder="–í–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫"
    />
    </div>

    <button
    type="submit"
    disabled={loading}
    style={{
      width: '100%',
      padding: '15px',
      background: loading ? '#666' : 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
          color: 'white',
          border: 'none',
          borderRadius: '8px',
          fontSize: '16px',
          cursor: loading ? 'not-allowed' : 'pointer',
          marginBottom: '20px',
          opacity: loading ? 0.7 : 1
    }}
    >
    {loading ? '‚è≥ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...' : 'üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å'}
    </button>

    <div style={{ textAlign: 'center', color: '#b0b0d0' }}>
    –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç?{' '}
    <button
    type="button"
    onClick={onSwitchToLogin}
    style={{
      background: 'none',
      border: 'none',
      color: '#4e54c8',
      cursor: 'pointer',
      textDecoration: 'underline'
    }}
    >
    –í–æ–π—Ç–∏
    </button>
    </div>
    </form>
    </div>
  );
};

export default RegisterForm;
